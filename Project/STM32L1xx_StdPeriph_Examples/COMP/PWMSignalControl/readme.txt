/**
  @page PWMSignalControl COMP2 PWM signal control example
  
  @verbatim
  ******************** (C) COPYRIGHT 2012 STMicroelectronics *******************
  * @file    COMP/PWMSignalControl/readme.txt 
  * @author  MCD Application Team
  * @version V1.1.1
  * @date    13-April-2012
  * @brief   Description of the COMP2 PWM signal control example.
  ******************************************************************************
  *
  * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  * You may not use this file except in compliance with the License.
  * You may obtain a copy of the License at:
  *
  *        http://www.st.com/software_license_agreement_liberty_v2
  *
  * Unless required by applicable law or agreed to in writing, software 
  * distributed under the License is distributed on an "AS IS" BASIS, 
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *
  ******************************************************************************
   @endverbatim

@par Example Description 

This example shows how to configure COMP2 peripheral to hold on safe state
(low level) TIM2 channels as soon as COMP2 output is set at high level.

  - COMP2 is configured as following:
     - Inverting input is internally connected to VREFINT = 1.22V
     - Non Inverting input is connected to PB5
     - Output is internally connected to TIM2 OCREFCLR (output compare reference clear)

  - TIM2CLK is set to 32 MHz, the TIM2 Prescaler is equal to 0 so the TIM2 counter
    clock used is 32 MHz.
    TIM2 frequency is defined as follow:
    TIM2 channels frequency = TIM2 counter clock / (Period + 1) 
                            = 32000000 /(65535 + 1) 
                            = 488 Hz.

  - External voltage should be connected to PB5 (RV3 potentiometer can be used).

  - Connect an oscilloscope to TIM2 channels (PA0 and PA1) to display waveforms. 

  - While PB5 is lower than VREFINT (1.22V), PWM signal is displayed on PA0 and PA1.
    While PB5 is higher than VREFINT, PA0 and PA1 are in low level.

@par Directory contents 

  - COMP/PWMSignalControl/stm32l1xx_conf.h     Library Configuration file
  - COMP/PWMSignalControl/stm32l1xx_it.c       Interrupt handlers
  - COMP/PWMSignalControl/stm32l1xx_it.h       Header for stm32l1xx_it.c
  - COMP/PWMSignalControl/main.c               Main program
  - COMP/PWMSignalControl/system_stm32l1xx.c   STM32L1xx system source file


@note The "system_stm32l1xx.c" is generated by an automatic clock configuration 
      system and can be easily customized to your own configuration. 
      To select different clock setup, use the "STM32L1xx_Clock_Configuration_V1.1.0.xls" 
      provided with the AN3309 package available on <a href="http://www.st.com/internet/mcu/family/141.jsp">  ST Microcontrollers </a>

@par Hardware and Software environment

  - This example runs on STM32L1xx Ultra Low Power High-, Medium-Density and Medium-Density Plus Devices.

  - This example has been tested with STMicroelectronics STM32L152D-EVAL (STM32L1xx 
    Ultra Low Power High-Density) and STM32L152-EVAL (STM32L1xx Ultra Low 
    Power Medium-Density) evaluation board and can be easily tailored to any 
    other supported device and development board.


  - STM32L152-EVAL Set-up
    - Make sure that JP17 is set in PB5 position (to connect Potentiometer RV3
      to COMP2 non inverting input)
    - Remove jumper JP11
    
  - STM32L152D-EVAL Set-up
    - Make sure that JP13 is set in PB5 position (to connect Potentiometer RV3
      to COMP2 non inverting input)
    - Remove jumper JP14    

@par How to use it ? 

In order to make the program work, you must do the following :
 - Copy all source files from this example folder to the template folder under
   Project\STM32L1xx_StdPeriph_Templates
 - Open your preferred toolchain 
 - Rebuild all files and load your image into target memory
 - Run the example
 - Connect TIM2 channels to an oscilloscope
 - Rotate RV3 potentiometer and note PA0 and PA1 states changing: 
    if RV3 < VREFINT, PA0 and PA1 at PWM
    if RV3 > VREFINT, PA0 and PA1 at low level

@note
- Ultra Low Power Medium-density devices are STM32L151xx and STM32L152xx 
  microcontrollers where the Flash memory density ranges between 64 and 128 Kbytes.
- Ultra Low Power Medium-density Plus devices are STM32L151xx, STM32L152xx and 
  STM32L162xx microcontrollers where the Flash memory density is 256 Kbytes.
- Ultra Low Power High-density devices are STM32L151xx, STM32L152xx and STM32L162xx 
  microcontrollers where the Flash memory density is 384 Kbytes.
    
 * <h3><center>&copy; COPYRIGHT STMicroelectronics</center></h3>
 */


