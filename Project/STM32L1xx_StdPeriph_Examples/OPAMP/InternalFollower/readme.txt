/**
  @page OPAMP_InternalFollower  Use OPAMP2 as internal follower
  
  @verbatim
  ******************** (C) COPYRIGHT 2012 STMicroelectronics *******************
  * @file    OPAMP/InternalFollower/readme.txt 
  * @author  MCD Application Team
  * @version V1.1.1
  * @date    13-April-2012
  * @brief   Description of the OPAMP internal follower example.
  ******************************************************************************
  *
  * Licensed under MCD-ST Liberty SW License Agreement V2, (the "License");
  * You may not use this file except in compliance with the License.
  * You may obtain a copy of the License at:
  *
  *        http://www.st.com/software_license_agreement_liberty_v2
  *
  * Unless required by applicable law or agreed to in writing, software 
  * distributed under the License is distributed on an "AS IS" BASIS, 
  * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  * See the License for the specific language governing permissions and
  * limitations under the License.
  *
  ******************************************************************************
   @endverbatim

@par Example Description 

This example provides a short description of how to configure the OPAMP2 in 
internal follower and how to use OPAMP2 output as ADC input.

OPAMP2 is configured in internal follower mode or unity gain (S3 and S5 are closed);
the applied signal on OPAMP2 positive input (PA6) is reproduced on OPAMP2
output (PB0): the output follows the input.

The ADC1 is configured to convert continuously ADC channel 8 which is internally
connected to OPAMP2 output. Each time the channel8 is converted an End Of Conversion
interrupt is generated.
The converted value of regular ADC channel 8 can be displayed on live watch.

@note that OPAMP2 positive input (PA6) can be connected via JP12 jumper to the
potentiometer (RV3) which can deliver a voltage between 0V and 3.3V.

@par Directory contents 

  - OPAMP/InternalFollower/stm32l1xx_conf.h    Library Configuration file
  - OPAMP/InternalFollower/stm32l1xx_it.c      Interrupt handlers
  - OPAMP/InternalFollower/stm32l1xx_it.h      Interrupt handlers header file
  - OPAMP/InternalFollower/main.c              Main program
  - OPAMP/InternalFollower/system_stm32l1xx.c  STM32L1xx system source file
  
@note The "system_stm32l1xx.c" is generated by an automatic clock configuration 
      system and can be easily customized to your own configuration. 
      To select different clock setup, use the "STM32L1xx_Clock_Configuration_V1.1.0.xls" 
      provided with the AN3309 package available on <a href="http://www.st.com/internet/mcu/family/141.jsp">  ST Microcontrollers </a>
         
@par Hardware and Software environment

  - This example runs on STM32L1xx Ultra Low Power High-Density and Medium-Density Plus Devices.
  
  - This example has been tested with STMicroelectronics STM32L152D-EVAL (STM32L1xx 
    Ultra Low Power High-Density) evaluation board and can be easily tailored 
    to any other supported device and development board.
  - Make sure that the jumper JP12 is fitted.

@par How to use it ? 

In order to make the program work, you must do the following :
 - Copy all source files from this example folder to the template folder under
   Project\STM32L1xx_StdPeriph_Templates
 - Open your preferred toolchain 
 - Rebuild all files and load your image into target memory
 - Run the example

@note
- Ultra Low Power Medium-density devices are STM32L151xx and STM32L152xx 
  microcontrollers where the Flash memory density ranges between 64 and 128 Kbytes.
- Ultra Low Power Medium-density Plus devices are STM32L151xx, STM32L152xx and 
  STM32L162xx microcontrollers where the Flash memory density is 256 Kbytes.
- Ultra Low Power High-density devices are STM32L151xx, STM32L152xx and STM32L162xx 
  microcontrollers where the Flash memory density is 384 Kbytes.
    
 * <h3><center>&copy; COPYRIGHT STMicroelectronics</center></h3>
 */


